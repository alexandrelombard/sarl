/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.examples.pingpongspace

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.OpenEventSpace
import io.sarl.core.Initialize
import io.sarl.core.OpenEventSpaceSpecification
import io.sarl.core.Behaviors
import io.sarl.core.ExternalContextAccess
import java.util.UUID
import io.sarl.core.Logging

/**
 * @author Stephane Galland.
 */
agent PongAgent {
	
	uses DefaultContextInteractions, Behaviors, Logging, ExternalContextAccess
	
	var comspace : OpenEventSpace

	on Initialize {
		comspace = defaultContext.getOrCreateSpaceWithSpec(
			typeof(OpenEventSpaceSpecification),
			occurrence.parameters.get(0) as UUID)
		comspace.register(asEventListener())
	}
	
	on Ping {
		info("Receiving Ping #" + occurrence.index)
		info("Sending Pong #" + occurrence.index)
		comspace.emit(new Pong( occurrence.index )) [it == occurrence.source]
	}

}
